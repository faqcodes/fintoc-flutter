name: ci package

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:

  analyze:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
      - uses: dart-lang/setup-dart@v1.5.0

      - id: install
        name: Install dependencies
        run: dart pub get

      - name: Check formatting
        run: dart format --output=none --set-exit-if-changed .
        if: always() && steps.install.outcome == 'success'

      - name: Analyze project source
        run: dart analyze --fatal-warnings --fatal-infos --verbose .
        if: always() && steps.install.outcome == 'success'

  test:
    needs: analyze

    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
      - uses: dart-lang/setup-dart@v1.5.0

      - id: install
        name: Install dependencies
        run: dart pub get

      - name: Run VM tests
        run: dart test --platform vm
        if: always() && steps.install.outcome == 'success'

  coverage:
    needs: test

    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
      - uses: dart-lang/setup-dart@v1.5.0

      - id: install
        name: Install dependencies
        run: dart pub get

      - id: coverage
        name: Install coverage
        run: dart pub global activate coverage
        if: always() && steps.install.outcome == 'success'
    
      - name: Running tests with coverage
        run: dart pub global run coverage:test_with_coverage
        if: always() && steps.coverage.outcome == 'success'

      - name: Upload coverage reports to Codecov
        uses: codecov/codecov-action@v3

  deploy:
    needs: coverage
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
      - uses: dart-lang/setup-dart@v1.5.0

      - id: install
        name: Install dependencies
        run: dart pub get

      - name: Publish project
        run: dart pub publish --dry-run
        if: always() && steps.install.outcome == 'success'